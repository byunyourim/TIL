jsp 와 타임리프에 대해 알아보던 중 ..
서버 사이드 렌더링이 나와서 정리해보자


## 서버 사이드 렌더링 이 뭘까?

서버에서 페이지를 그려 클라이언트로 보낸 후 화면에 뿌려주는 것



그러면 

서버 사이들 렌더링을 왜 사용할까??

목적은 크게





1. 검색 엔진 최적화

2. 빠른 페이지 렌더링



검색 엔진 최적화란 구글, 네이버와 같은 검색 사이트에서 검색했을 때

결과가 사용자에게 많이 노출될 수 있도록 최적화 하는 기법입니다.

특히, SNS에서 링크를 공유했을 때 해당 웹 사이트의 정보를 이미지와 설명으로 표시해주는 OG(Open Graph) Tag를 페이지 별로 적용하기 위해서는 서버 사이드 렌더링이 효율적입니다.



또한, 서버 사이드 렌더링은 빈 HTML 페이지를 받아 브라우저에서 그리는 클라이언트 사이드 렌더링과 다르게

서버에서 미리 그려서 브라우저로 보내주기 때문에 페이지를 그리는 시간을 단축할 수 있습니다. 사용자 입장에서는 화면에 유의미한 정보가 표시되는 시간이 빨라지는 것이죠.



서버 사이드 렌더링의 단점
이렇게만 보면 서버 사이드 렌더링을 하는게 좋겠네 라고 생각하실 수 있지만 시작하기 전에 주의해야 할 점이 있습니다.

서버 사이드 렌더링은 Node.js 웹 애플리케이션 실행 방법을 알아야하고 서버쪽 환경 구성과 함께 클라이언트,

서버 빌드에 대한 이해가 필요합니다.

따라서, 프런트엔드 개발 입문자 입장에서는 쉽지 않은 진입 장벽이 존재합니다.

또한, Node.js 환경에서 실행되기 때문에 브라우저 관련 API를 다룰 때 주의해야 합니다.

뷰 싱글 페이지 애플리케이션의 라이프사이클 훅과는 다른 환경(브라우저가 아닌 Node.js)에서 동작하기 때문에

 beforeCreate와 created에서 window나 document와 같은 브라우저 객체에 접근할 수 없습니다.





